//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   row_major float4x4 viewProjection; // Offset:    0 Size:    64 [unused]
//   float4 lightDirection;             // Offset:   64 Size:    16
//   float4 lightColor;                 // Offset:   80 Size:    16
//   float3 lightPosition;              // Offset:   96 Size:    12
//   float lightRange;                  // Offset:  108 Size:     4 [unused]
//   float ambientStrength;             // Offset:  112 Size:     4
//   float diffuseStrength;             // Offset:  116 Size:     4
//   float specularStrength;            // Offset:  120 Size:     4
//   float lightPadding;                // Offset:  124 Size:     4 [unused]
//   float4 fogColor;                   // Offset:  128 Size:    16
//   float fogStart;                    // Offset:  144 Size:     4
//   float fogEnd;                      // Offset:  148 Size:     4
//   float2 fogPadding;                 // Offset:  152 Size:     8 [unused]
//
// }
//
// cbuffer CbSubset
// {
//
//   float4 materialColor;              // Offset:    0 Size:    16
//   float3 emissiveColor;              // Offset:   16 Size:    12
//   float emissiveStrength;            // Offset:   28 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// diffuseMapSamplerState            sampler      NA          NA             s0      1 
// environmentMapSamplerState        sampler      NA          NA             s1      1 
// diffuseMap                        texture  float4          2d             t0      1 
// metallicMap                       texture  float4          2d             t2      1 
// roughnessMap                      texture  float4          2d             t3      1 
// environmentMap                    texture  float4          2d            t15      1 
// CbScene                           cbuffer      NA          NA            cb0      1 
// CbSubset                          cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// COLOR                    0   xyzw        2     NONE   float   xyz 
// TANGENT                  0   xyz         3     NONE   float       
// BINORMAL                 0   xyz         4     NONE   float       
// NORMAL                   0   xyz         5     NONE   float   xyz 
// POSITION                 0   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[10], immediateIndexed
dcl_constantbuffer CB2[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t15
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 6
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.texcoord.x; v1.y <- pin.texcoord.y; 
//   v2.x <- pin.color.x; v2.y <- pin.color.y; v2.z <- pin.color.z; v2.w <- pin.color.w; 
//   v3.x <- pin.tangent.x; v3.y <- pin.tangent.y; v3.z <- pin.tangent.z; 
//   v4.x <- pin.binormal.x; v4.y <- pin.binormal.y; v4.z <- pin.binormal.z; 
//   v5.x <- pin.normal.x; v5.y <- pin.normal.y; v5.z <- pin.normal.z; 
//   v6.x <- pin.worldPosition.x; v6.y <- pin.worldPosition.y; v6.z <- pin.worldPosition.z; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 19 "C:\Users\2230018\Desktop\授業\2年\チE制作\3回目\チE"
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t0.xyzw, s0
mul r0.xyz, r0.xyzx, v2.xyzx  // r0.x <- baseColor.x; r0.y <- baseColor.y; r0.z <- baseColor.z

#line 22
sample_indexable(texture2d)(float,float,float,float) r0.w, v1.xyxx, t2.yzwx, s0
mov r0.w, r0.w  // r0.w <- metallic

#line 23
sample_indexable(texture2d)(float,float,float,float) r1.x, v1.xyxx, t3.xyzw, s0
mov r1.x, r1.x  // r1.x <- roughness

#line 26
dp3 r1.y, v5.xyzx, v5.xyzx
rsq r1.y, r1.y
mul r1.yzw, r1.yyyy, v5.xxyz  // r1.y <- N.x; r1.z <- N.y; r1.w <- N.z

#line 27
mov r2.xyz, -v6.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx  // r2.x <- V.x; r2.y <- V.y; r2.z <- V.z

#line 28
mov r3.xyz, -cb0[4].xyzx
dp3 r2.w, r3.xyzx, r3.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, r3.xyzx  // r3.x <- L.x; r3.y <- L.y; r3.z <- L.z

#line 29
dp3 r2.w, r1.yzwy, r3.xyzx
max r2.w, r2.w, l(0.000000)  // r2.w <- d

#line 30
mov r3.xyz, -r3.xyzx
dp3 r3.w, r3.xyzx, r1.yzwy
add r3.w, r3.w, r3.w
mov r3.w, -r3.w
mul r4.xyz, r1.yzwy, r3.wwww
add r3.xyz, r3.xyzx, r4.xyzx  // r3.x <- R.x; r3.y <- R.y; r3.z <- R.z

#line 36
dp3 r3.x, r3.xyzx, r2.xyzx
max r3.x, r3.x, l(0.000000)
min r3.x, r3.x, l(1.000000)
mov r1.x, -r1.x
add r1.x, r1.x, l(1.000000)
mul r1.x, r1.x, l(50.000000)
log r3.x, r3.x
mul r1.x, r1.x, r3.x
exp r1.x, r1.x  // r1.x <- specPower

#line 39
mov r3.xyz, l(-1.000000,-1.000000,-1.000000,-0.000000)
add r3.xyz, r0.xyzx, r3.xyzx
mul r3.xyz, r0.wwww, r3.xyzx
add r3.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)  // r3.x <- specularColor.x; r3.y <- specularColor.y; r3.z <- specularColor.z

#line 40
mul r3.xyz, r1.xxxx, r3.xyzx
mul r3.xyz, r3.xyzx, cb0[7].zzzz  // r3.x <- specular.x; r3.y <- specular.y; r3.z <- specular.z

#line 45
mov r2.xyz, -r2.xyzx
dp3 r0.w, r2.xyzx, r1.yzwy
add r0.w, r0.w, r0.w
mov r0.w, -r0.w
mul r1.xyz, r0.wwww, r1.yzwy
add r1.xyz, r2.xyzx, r1.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xy, r0.wwww, r1.xyxx  // r1.x <- reflectedDir.x; r1.y <- reflectedDir.y

#line 46
mul r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)  // r1.x <- envUV.x; r1.y <- envUV.y

#line 47
itof r0.w, l(0)
sample_l_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t15.xyzw, s1, r0.w
mov r1.xyz, r1.xyzx  // r1.x <- envColor.x; r1.y <- envColor.y; r1.z <- envColor.z

#line 48
add r2.xyz, r1.xyzx, l(1000.000000, 1000.000000, 1000.000000, 0.000000)
div r1.xyz, r1.xyzx, r2.xyzx

#line 53
mul r0.w, r2.w, cb0[7].y
mul r2.xyz, r0.xyzx, r0.wwww
mul r2.xyz, r2.xyzx, cb0[5].xyzx  // r2.x <- diffuse.x; r2.y <- diffuse.y; r2.z <- diffuse.z

#line 57
mul r4.xyz, cb2[1].wwww, cb2[1].xyzx  // r4.x <- finalEmissive.x; r4.y <- finalEmissive.y; r4.z <- finalEmissive.z

#line 62
mov r5.xyz, -cb0[6].xyzx
add r5.xyz, r5.xyzx, v6.xyzx
dp3 r0.w, r5.xyzx, r5.xyzx
sqrt r0.w, r0.w  // r0.w <- distance

#line 63
mov r1.w, -r0.w
add r1.w, r1.w, cb0[9].y
mov r2.w, -cb0[9].x
add r2.w, r2.w, cb0[9].y
div r1.w, r1.w, r2.w
max r1.w, r1.w, l(0.000000)
min r1.w, r1.w, l(1.000000)  // r1.w <- fogFactor

#line 66
lt r2.w, r0.w, l(10.000000)
if_nz r2.w

#line 68
  mov r1.w, l(1.000000)

#line 69
endif 

#line 70
mov r2.w, l(-5.000000)
add r0.w, r0.w, r2.w
div r0.w, r0.w, l(50.000000)
max r0.w, r0.w, l(0.000000)
min r0.w, r0.w, l(1.000000)  // r0.w <- distanceFactor

#line 71
mov r2.w, l(-1.200000)
add r2.w, r2.w, cb0[7].x
mul r2.w, r0.w, r2.w
add r2.w, r2.w, l(1.200000)  // r2.w <- adjustedAmbientStrength

#line 72
mov r3.w, l(-0.800000)
add r3.w, r3.w, cb0[7].z
mul r0.w, r0.w, r3.w
add r0.w, r0.w, l(0.800000)  // r0.w <- adjustedSpecularStrength

#line 75
mul r5.xyz, r2.wwww, cb0[5].xyzx
mul r0.xyz, r0.xyzx, r5.xyzx  // r0.x <- ambient.x; r0.y <- ambient.y; r0.z <- ambient.z

#line 76
mul r3.xyz, r3.xyzx, r0.wwww  // r3.x <- finalSpecular.x; r3.y <- finalSpecular.y; r3.z <- finalSpecular.z

#line 79
add r0.xyz, r2.xyzx, r0.xyzx
add r0.xyz, r3.xyzx, r0.xyzx
add r0.xyz, r1.xyzx, r0.xyzx
add r0.xyz, r4.xyzx, r0.xyzx  // r0.x <- colorSum.x; r0.y <- colorSum.y; r0.z <- colorSum.z

#line 84
mul r0.xyz, r0.xyzx, cb2[0].xyzx
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)  // r0.x <- finalColor.x; r0.y <- finalColor.y; r0.z <- finalColor.z
mov r0.w, cb2[0].w  // r0.w <- finalColor.w

#line 87
mov r1.xyz, -cb0[8].xyzx
add r0.xyz, r0.xyzx, r1.xyzx
mul r0.xyz, r0.xyzx, r1.wwww
add r0.xyz, r0.xyzx, cb0[8].xyzx  // r0.x <- finalColor.x; r0.y <- finalColor.y; r0.z <- finalColor.z

#line 89
mov o0.xyz, r0.xyzx
mov o0.w, r0.w
ret 
// Approximately 106 instruction slots used
